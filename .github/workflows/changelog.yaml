name: '📝 Create/Update Release Draft & Release Bump PR'

on:
  push:
    branches:
      - master
    paths-ignore:
      - build.yaml
  workflow_dispatch:
  repository_dispatch:
    types:
      - update-prep-command

permissions:
  contents: write
  pull-requests: write

jobs:
  call:
    uses: jellyfin/jellyfin-meta-plugins/.github/workflows/changelog.yaml@master
    with:
      repository-name: JPKribs/jellyfin-plugin-episodepostergenerator
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  build-and-attach:
    needs: call
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Build Plugin
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Get Build Info
        id: build_info
        run: |
          BUILD_VERSION=$(grep '^version:' build.yaml | sed 's/version: *"\?\([^"]*\)"\?.*/\1/' | tr -d '"')
          echo "build_version=${BUILD_VERSION}" >> $GITHUB_OUTPUT

      - name: Get Latest Draft Release
        id: release
        run: |
          RELEASE_TAG=$(gh release list --limit 1 --json tagName,isDraft --jq '.[] | select(.isDraft == true) | .tagName')
          echo "release_tag=${RELEASE_TAG}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Release Tag and Name
        if: steps.release.outputs.release_tag != ''
        run: |
          CORRECT_TAG="v${{ steps.build_info.outputs.build_version }}"
          
          # Update the release tag and name to match build.yaml
          gh api --method PATCH /repos/JPKribs/jellyfin-plugin-episodepostergenerator/releases/tags/${{ steps.release.outputs.release_tag }} \
            -f tag_name="${CORRECT_TAG}" \
            -f name="${CORRECT_TAG}"
          
          echo "Updated release tag to: ${CORRECT_TAG}"
          echo "updated_tag=${CORRECT_TAG}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: update_tag

      - name: Upload Assets to Draft Release
        if: steps.release.outputs.release_tag != ''
        run: |
          # Use the updated tag name
          UPLOAD_TAG="${{ steps.update_tag.outputs.updated_tag || steps.release.outputs.release_tag }}"
          
          gh release upload "${UPLOAD_TAG}" \
            ./dist/jellyfin-plugin-episodepostergenerator-${{ steps.build_info.outputs.build_version }}.zip \
            ./dist/jellyfin-plugin-episodepostergenerator-${{ steps.build_info.outputs.build_version }}.zip.md5
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}